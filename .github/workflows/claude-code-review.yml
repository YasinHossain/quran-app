name: Claude Code Review

on:
  issue_comment:
    types: [created]

jobs:
  claude-review:
    if: github.event.issue.pull_request && (contains(github.event.comment.body, '@claude') || contains(github.event.comment.body, 'review'))

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4.1)
          # model: "claude-opus-4-1-20250805"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request thoroughly and provide feedback on:

            üèóÔ∏è **Architecture & Code Quality**
            - Clean Architecture compliance (Domain ‚Üí Application ‚Üí Infrastructure ‚Üí Presentation)
            - Component structure and atomic design patterns
            - TypeScript type safety and interface usage
            - Code organization and naming conventions

            üêõ **Bugs & Issues**
            - Potential runtime errors or edge cases
            - Logic errors or incorrect implementations
            - Missing error handling

            ‚ö° **Performance**
            - React performance optimizations (memo, useMemo, useCallback)
            - Bundle size impact and code splitting opportunities
            - Unnecessary re-renders or expensive operations

            üîí **Security**
            - Input validation and sanitization
            - XSS prevention and secure coding practices
            - API security and data handling

            üß™ **Testing**
            - Test coverage for new features
            - Missing test cases or edge case testing
            - Test quality and maintainability

            üì± **Mobile & Accessibility**
            - Mobile-first responsive design
            - Touch-friendly interactions
            - WCAG AA compliance

            Please run the quality checks and provide specific, actionable feedback with code examples where helpful.

          # Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          use_sticky_comment: true

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Add specific tools for running tests and quality checks
          allowed_tools: 'Bash(npm run check),Bash(npm run test:coverage),Bash(npm run lint),Bash(npm run type-check),Bash(npm run format -- --check)'

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')
